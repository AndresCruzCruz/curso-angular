{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nexport class AddCharacterComponent {\n  constructor() {\n    this.onNewCharacter = new EventEmitter();\n    this.character = {\n      name: '',\n      power: 0\n    };\n  }\n  emitCharacter() {\n    // debugger; // Esto sirve para generar un breakpoint en el navegador\n    console.log(this.character);\n    if (this.character.name.length === 0) return;\n    this.onNewCharacter.emit({\n      ...this.character\n    });\n    this.character.name = '';\n    this.character.power = 0;\n  }\n  static #_ = this.ɵfac = function AddCharacterComponent_Factory(t) {\n    return new (t || AddCharacterComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddCharacterComponent,\n    selectors: [[\"dbz-add-character\"]],\n    outputs: {\n      onNewCharacter: \"onNewCharacter\"\n    },\n    decls: 10,\n    vars: 5,\n    consts: [[1, \"row\", 3, \"ngSubmit\"], [\"type\", \"text\", \"name\", \"name\", \"placeholder\", \"Nombre\", 1, \"form-control\", \"mb-2\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"power\", \"placeholder\", \"Poder\", 1, \"form-control\", \"mb-2\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function AddCharacterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h4\");\n        i0.ɵɵtext(1, \"Agregar Personaje\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddCharacterComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.emitCharacter();\n        });\n        i0.ɵɵelementStart(3, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function AddCharacterComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.character.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function AddCharacterComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.character.power = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵtext(6, \" Agregar \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"pre\");\n        i0.ɵɵtext(8);\n        i0.ɵɵpipe(9, \"json\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.character.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.character.power);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 3, ctx.character));\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm, i2.JsonPipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;;;;AAQ/D,OAAM,MAAOC,qBAAqB;EALlCC;IAQS,mBAAc,GAA4B,IAAIF,YAAY,EAAE;IAE5D,cAAS,GAAc;MAC5BG,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE;KACR;;EAEDC,aAAa;IAEX;IAEAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,SAAS,CAAC;IAC3B,IAAI,IAAI,CAACA,SAAS,CAACL,IAAI,CAACM,MAAM,KAAK,CAAC,EAAE;IACtC,IAAI,CAACC,cAAc,CAACC,IAAI,CAAC;MAAC,GAAG,IAAI,CAACH;IAAS,CAAC,CAAC;IAC7C,IAAI,CAACA,SAAS,CAACL,IAAI,GAAG,EAAE;IACxB,IAAI,CAACK,SAAS,CAACJ,KAAK,GAAG,CAAC;EAC1B;EAAC;qBAnBUH,qBAAqB;EAAA;EAAA;UAArBA,qBAAqB;IAAAW;IAAAC;MAAAH;IAAA;IAAAI;IAAAC;IAAAC;IAAAC;MAAA;QCRlCC,0BAAI;QAAAA,iCAAiB;QAAAA,iBAAK;QACtBA,+BAA+C;QAA7BA;UAAA,OAAYC,mBAAe;QAAA,EAAC;QAC5CD,gCAKqB;QAHrBA;UAAA;QAAA,EAA4B;QAF5BA,iBAKqB;QAErBA,gCAKoB;QAHpBA;UAAA;QAAA,EAA6B;QAF7BA,iBAKoB;QAEpBA,iCAA8C;QAC5CA,yBACF;QAAAA,iBAAS;QAIXA,2BAAK;QAAAA,YAAsB;;QAAAA,iBAAM;;;QAlB/BA,eAA4B;QAA5BA,4CAA4B;QAO5BA,eAA6B;QAA7BA,6CAA6B;QAW1BA,eAAsB;QAAtBA,yDAAsB","names":["EventEmitter","AddCharacterComponent","constructor","name","power","emitCharacter","console","log","character","length","onNewCharacter","emit","selectors","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/andres.cruz/Documents/GitHub/curso-angular/02-Bases/src/app/dbz/components/add-character/add-character.component.ts","/Users/andres.cruz/Documents/GitHub/curso-angular/02-Bases/src/app/dbz/components/add-character/add-character.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { Character } from '../../interfaces/character.interface';\n\n@Component({\n  selector: 'dbz-add-character',\n  templateUrl: './add-character.component.html',\n  styleUrls: ['./add-character.component.css']\n})\nexport class AddCharacterComponent {\n\n  @Output()\n  public onNewCharacter: EventEmitter<Character> = new EventEmitter();\n\n  public character: Character = {\n    name: '',\n    power: 0\n  }\n\n  emitCharacter():void{\n\n    // debugger; // Esto sirve para generar un breakpoint en el navegador\n\n    console.log(this.character)\n    if (this.character.name.length === 0) return;\n    this.onNewCharacter.emit({...this.character});\n    this.character.name = '';\n    this.character.power = 0;\n  }\n\n}\n","<h4>Agregar Personaje</h4>\n    <form class=\"row\" (ngSubmit)=\"emitCharacter()\">\n      <input\n      type=\"text\"\n      [(ngModel)]=\"character.name\"\n      name = \"name\"\n      class=\"form-control mb-2\"\n      placeholder=\"Nombre\">\n\n      <input\n      type=\"text\"\n      [(ngModel)]=\"character.power\"\n      name = \"power\"\n      class=\"form-control mb-2\"\n      placeholder=\"Poder\">\n\n      <button type=\"submit\" class=\"btn btn-primary\">\n        Agregar\n      </button>\n    </form>\n\n\n    <pre>{{ character | json }}</pre>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}