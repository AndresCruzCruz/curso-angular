{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DbzService {\n  constructor() {\n    this.characters = [{\n      name: 'Krillin',\n      power: 1000\n    }, {\n      name: 'Goku',\n      power: 9500\n    }, {\n      name: 'Vegeta',\n      power: 8000\n    }];\n  }\n  onNewCharacter(character) {\n    this.characters.push(character);\n  }\n  onDeleteCharacter(index) {\n    console.log('Deleting character', index);\n    this.characters.splice(index, 1);\n  }\n  static #_ = this.ɵfac = function DbzService_Factory(t) {\n    return new (t || DbzService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DbzService,\n    factory: DbzService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,UAAU;EAHvBC;IAKS,eAAU,GAAgB,CAC/B;MACEC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE;KACR,EACD;MACED,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE;KACR,EACD;MACED,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE;KACR,CACF;;EAEMC,cAAc,CAACC,SAAoB;IACxC,IAAI,CAACC,UAAU,CAACC,IAAI,CAACF,SAAS,CAAC;EACjC;EAEOG,iBAAiB,CAACC,KAAa;IACpCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,KAAK,CAAC;IACxC,IAAI,CAACH,UAAU,CAACM,MAAM,CAACH,KAAK,EAAC,CAAC,CAAC;EACjC;EAAC;qBAxBUT,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAAa,SAAVb,UAAU;IAAAc,YAFT;EAAM","names":["DbzService","constructor","name","power","onNewCharacter","character","characters","push","onDeleteCharacter","index","console","log","splice","factory","providedIn"],"sourceRoot":"","sources":["/Users/andres.cruz/Documents/GitHub/curso-angular/02-Bases/src/app/dbz/services/dbz.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Character } from '../interfaces/character.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DbzService {\n\n  public characters: Character[] = [\n    {\n      name: 'Krillin',\n      power: 1000\n    },\n    {\n      name: 'Goku',\n      power: 9500\n    },\n    {\n      name: 'Vegeta',\n      power: 8000\n    }\n  ];\n\n  public onNewCharacter(character: Character): void {\n    this.characters.push(character);\n  }\n\n  public onDeleteCharacter(index: number): void {\n    console.log('Deleting character', index);\n    this.characters.splice(index,1);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}