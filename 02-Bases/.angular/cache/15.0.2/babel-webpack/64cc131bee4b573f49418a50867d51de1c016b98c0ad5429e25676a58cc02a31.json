{"ast":null,"code":"import { v4 as uuid } from 'uuid';\nimport * as i0 from \"@angular/core\";\nexport class DbzService {\n  constructor() {\n    this.characters = [{\n      id: uuid(),\n      name: 'Krillin',\n      power: 1000\n    }, {\n      id: uuid(),\n      name: 'Goku',\n      power: 9500\n    }, {\n      id: uuid(),\n      name: 'Vegeta',\n      power: 8000\n    }];\n  }\n  onNewCharacter(character) {\n    const newCharacter = {\n      id: uuid(),\n      ...character // Destructuramos el objeto character y lo asignamos a newCharacter\n    };\n\n    this.characters.push(newCharacter);\n  }\n  onDeleteCharacter(idCharacter) {\n    console.log('Deleting character', idCharacter);\n    this.characters = this.characters.filter(character => character.id !== idCharacter);\n  }\n  static #_ = this.ɵfac = function DbzService_Factory(t) {\n    return new (t || DbzService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DbzService,\n    factory: DbzService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,EAAE,IAAIC,IAAI,QAAQ,MAAM;;AAMjC,OAAM,MAAOC,UAAU;EAHvBC;IAKS,eAAU,GAAgB,CAC/B;MACEC,EAAE,EAAEH,IAAI,EAAE;MACVI,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE;KACR,EACD;MACEF,EAAE,EAAEH,IAAI,EAAE;MACVI,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE;KACR,EACD;MACEF,EAAE,EAAEH,IAAI,EAAE;MACVI,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE;KACR,CACF;;EAEMC,cAAc,CAACC,SAAoB;IACxC,MAAMC,YAAY,GAAc;MAC9BL,EAAE,EAAEH,IAAI,EAAE;MACV,GAAGO,SAAS,CAAC;KACd;;IACD,IAAI,CAACE,UAAU,CAACC,IAAI,CAACF,YAAY,CAAC;EACpC;EAEOG,iBAAiB,CAACC,WAAmB;IAC1CC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,WAAW,CAAC;IAC9C,IAAI,CAACH,UAAU,GAAG,IAAI,CAACA,UAAU,CAACM,MAAM,CAACR,SAAS,IAAIA,SAAS,CAACJ,EAAE,KAAKS,WAAW,CAAC;EACrF;EAAC;qBA/BUX,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAAe,SAAVf,UAAU;IAAAgB,YAFT;EAAM","names":["v4","uuid","DbzService","constructor","id","name","power","onNewCharacter","character","newCharacter","characters","push","onDeleteCharacter","idCharacter","console","log","filter","factory","providedIn"],"sourceRoot":"","sources":["/Users/andres.cruz/Documents/GitHub/curso-angular/02-Bases/src/app/dbz/services/dbz.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { v4 as uuid } from 'uuid';\nimport { Character } from '../interfaces/character.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DbzService {\n\n  public characters: Character[] = [\n    {\n      id: uuid(),\n      name: 'Krillin',\n      power: 1000\n    },\n    {\n      id: uuid(),\n      name: 'Goku',\n      power: 9500\n    },\n    {\n      id: uuid(),\n      name: 'Vegeta',\n      power: 8000\n    }\n  ];\n\n  public onNewCharacter(character: Character): void {\n    const newCharacter: Character = {\n      id: uuid(),\n      ...character // Destructuramos el objeto character y lo asignamos a newCharacter\n    };\n    this.characters.push(newCharacter);\n  }\n\n  public onDeleteCharacter(idCharacter: string): void {\n    console.log('Deleting character', idCharacter);\n    this.characters = this.characters.filter(character => character.id !== idCharacter);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}